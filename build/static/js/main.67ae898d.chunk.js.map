{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","onSearchChangeTerm","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","onDeletedId","onToggleImportantId","onToggleDoneId","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","filterItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"oWAEeA,G,MCCG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACxB,OACE,yBAAKC,UAAU,qBACb,yCACA,4BAAKF,EAAL,gBAAwBC,EAAxB,YCLSE,G,kNCGbC,MAAQ,CACNC,KAAM,I,EAGRC,eAAiB,SAACC,GAChB,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAACL,SACf,EAAKM,MAAMC,mBAAmBP,I,uDAI9B,OACI,2BAAOQ,KAAK,OACVX,UAAU,4BACVY,YAAY,iBACZC,SAAWC,KAAKV,eAChBG,MAAOO,KAAKZ,MAAMC,W,GAlBaY,c,QCD1BC,G,6KCID,IAAD,EAKQF,KAAKL,MAJVQ,EADH,EACGA,MAAOC,EADV,EACUA,UACXC,EAFC,EAEDA,kBACAC,EAHC,EAGDA,aACAC,EAJC,EAIDA,UAGAC,EAAa,iBAUjB,OAjBK,EAKDvB,OAKAuB,GAAc,SAGfD,IACCC,GAAc,cAId,0BAAMtB,UAAYsB,GACd,0BACAtB,UAAU,uBACVuB,QAAUH,GACTH,GAGD,4BAAQN,KAAK,SACbX,UAAU,6CACVuB,QAAUJ,GACV,uBAAGnB,UAAU,uBAGb,4BAAQW,KAAK,SACbY,QAASL,EACTlB,UAAU,6CACV,uBAAGA,UAAU,wB,GApCae,cCF3BS,G,MCGE,SAAC,GAEuB,IAFrBC,EAEoB,EAFpBA,MAAOC,EAEa,EAFbA,YACPC,EACoB,EADpBA,oBACAC,EAAoB,EAApBA,eAEZC,EAAWJ,EAAMK,KAAI,SAACC,GAAU,IAC5BC,EAAqBD,EAArBC,GAAOC,EADoB,YACNF,EADM,QAGnC,OACE,wBAAIG,IAAKF,EAAIhC,UAAU,mBACrB,kBAAC,EAAD,iBACQiC,EADR,CAEIf,UAAW,kBAAMQ,EAAYM,IAC7Bb,kBAAmB,kBAAMQ,EAAoBK,IAC7CZ,aAAc,kBAAMQ,EAAeI,WAM7C,OACE,wBAAIhC,UAAU,wBACV6B,KCxBOM,G,kNCGXC,QAAU,CACN,CAAEC,KAAM,MAAOpB,MAAO,OACtB,CAAEoB,KAAM,SAAUpB,MAAO,UACzB,CAAEoB,KAAM,OAAQpB,MAAO,S,uDAGjB,IAAD,EAE8BH,KAAKL,MAAhC6B,EAFH,EAEGA,OAAQC,EAFX,EAEWA,eAEVH,EAAUtB,KAAKsB,QAAQN,KAAI,YAAoB,IAAlBO,EAAiB,EAAjBA,KAAMpB,EAAW,EAAXA,MAE/BuB,EADWF,IAAWD,EACH,WAAa,wBAEtC,OACI,4BAAQ1B,KAAK,SACLX,UAAS,cAASwC,GAClBN,IAAKG,EACLd,QAAS,kBAAKgB,EAAeF,KAChCpB,MAKb,OACI,yBAAKjB,UAAU,aACVoC,O,GA5B6BrB,cCD/B0B,G,kNCGXvC,MAAQ,CACNe,MAAO,I,EAGTyB,cAAgB,SAACrC,GACb,EAAKG,SAAS,CACVS,MAAOZ,EAAEC,OAAOC,S,EAIxBoC,SAAW,SAACtC,GACRA,EAAEuC,iBACF,EAAKnC,MAAMoC,YAAY,EAAK3C,MAAMe,OAClC,EAAKT,SAAS,CACVS,MAAO,M,uDAKX,OACI,0BAAMjB,UAAU,uBAChB2C,SAAU7B,KAAK6B,UACX,2BAAOhC,KAAK,OACZX,UAAU,eACVa,SAAUC,KAAK4B,cACf9B,YAAY,wBACZL,MAAOO,KAAKZ,MAAMe,QAElB,4BAAQjB,UAAU,6BAAlB,iB,GA9ByBe,cCD1B+B,G,kNCUXC,MAAQ,I,EAER7C,MAAQ,CACJ8C,SAAU,CACN,EAAKC,eAAe,gBACpB,EAAKA,eAAe,oBACpB,EAAKA,eAAe,iBAExB9C,KAAM,GACNmC,OAAQ,O,EAYZY,WAAa,SAAClB,GACV,EAAKxB,UAAS,YAAkB,IAAfwC,EAAc,EAAdA,SACPG,EAAMH,EAASI,WAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,KAOjD,MAAO,CACHgB,SANU,sBACPA,EAASM,MAAM,EAAGH,IADX,YAEPH,EAASM,MAAMH,EAAM,U,EASpCI,QAAU,SAACC,GACP,IAAMC,EAAU,EAAKR,eAAeO,GAEpC,EAAKhD,UAAS,YAAmB,IAAhBwC,EAAe,EAAfA,SAMb,MAAO,CACHA,SANQ,sBACLA,GADK,CAERS,S,EAsBZrC,aAAe,SAACY,GACZ,EAAKxB,UAAS,YAAmB,IAAhBwC,EAAe,EAAfA,SACb,MAAO,CACHA,SAAU,EAAKU,eAAeV,EAAUhB,EAAI,a,EAKxDb,kBAAoB,SAACa,GACjB,EAAKxB,UAAS,YAAmB,IAAhBwC,EAAe,EAAfA,SACb,MAAO,CACHA,SAAU,EAAKU,eAAeV,EAAUhB,EAAI,kB,EAKxD5B,eAAiB,SAACD,GACd,EAAKK,SAAS,CAAEL,U,EAGpBoC,eAAiB,SAACD,GACd,EAAK9B,SAAS,CAAE8B,Y,6DAzELrB,GACX,MAAO,CACCA,QACAI,WAAW,EACXtB,MAAM,EACNiC,GAAIlB,KAAKiC,W,qCAkCNY,EAAK3B,EAAI4B,GACpB,IAAMT,EAAMQ,EAAIP,WAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,KAEtC6B,EAAUF,EAAIR,GACdM,EAAO,eAAOI,EAAP,eAAiBD,GAAYC,EAAQD,KAElD,MAAM,GAAN,mBACOD,EAAIL,MAAM,EAAGH,IADpB,CAEIM,GAFJ,YAGOE,EAAIL,MAAMH,EAAM,O,6BA4BpBW,EAAO3D,GACV,OAAmB,IAAhBA,EAAK4D,OACGD,EAGJA,EAAMxB,QAAO,SAACP,GACnB,OAAOA,EAAKd,MACP+C,cACAC,QAAQ9D,EAAK6D,gBAAkB,O,kCAI9BF,EAAOxB,GACf,OAAOA,GACH,IAAK,MACD,OAAOwB,EACX,IAAK,SACD,OAAOA,EAAMxB,QAAO,SAACP,GAAD,OAAWA,EAAKhC,QACxC,IAAK,OACD,OAAO+D,EAAMxB,QAAO,SAACP,GAAD,OAAUA,EAAKhC,QACvC,QACG,OAAO+D,K,+BAIR,IAAD,EAC8BhD,KAAKZ,MAAhC8C,EADH,EACGA,SAAU7C,EADb,EACaA,KAAMmC,EADnB,EACmBA,OAElB4B,EAAcpD,KAAKqD,YACrBrD,KAAKsD,OAAOpB,EAAU7C,GAAOmC,GAE3B+B,EAAYrB,EACbV,QAAO,SAACe,GAAD,OAAQA,EAAGtD,QAAMgE,OAEvBO,EAAYtB,EAASe,OAASM,EAEpC,OACI,yBAAKrE,UAAU,YACX,kBAAC,EAAD,CAAWF,KAAMwE,EAAWvE,KAAMsE,IAClC,yBAAKrE,UAAU,oBACX,kBAAC,EAAD,CAAaU,mBAAoBI,KAAKV,iBACtC,kBAAC,EAAD,CACIkC,OAAQA,EACRC,eAAgBzB,KAAKyB,kBAG7B,kBAAC,EAAD,CACId,MAAOyC,EACPxC,YAAaZ,KAAKoC,WAClBvB,oBAAqBb,KAAKK,kBAC1BS,eAAgBd,KAAKM,eAGzB,kBAAC,EAAD,CAAayB,YAAc/B,KAAKyC,e,GA/IfxC,cCLjCwD,IAASC,OAAO,kBAAC,EAAD,MACZC,SAASC,eAAe,W","file":"static/js/main.67ae898d.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React, {Component} from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  }\n\n  onSearchChange = (e) => {\n    const term = e.target.value;\n    this.setState({term});\n    this.props.onSearchChangeTerm(term)\n  }\n\n  render () {\n    return (\n        <input type=\"text\"\n          className=\"form-control search-input\"\n          placeholder=\"type to search\"\n          onChange={ this.onSearchChange }\n          value={this.state.term}/>\n    );\n  };\n};\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React, { Component } from 'react';\nimport './todo-list-item.css';\n\n\nexport default class TodoListItem extends Component {\n\n    render() {\n        const { label, onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            important,\n            done } = this.props;\n\n        let classNames = 'todo-list-item';\n\n        if(done) {\n            classNames += ' done';\n        }\n\n        if(important) {\n            classNames += ' important';\n        }\n\n        return (\n            <span className={ classNames }>\n                <span\n                className=\"todo-list-item-label\"\n                onClick={ onToggleDone }>\n                {label}\n                </span>\n\n                <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={ onToggleImportant }>\n                <i className=\"fa fa-exclamation\"/>\n                </button>\n\n                <button type=\"button\"\n                onClick={onDeleted}\n                className=\"btn btn-outline-danger btn-sm float-right\">\n                <i className=\"fa fa-trash-o\"/>\n                </button>\n            </span>\n        );\n    };\n};\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeletedId,\n                    onToggleImportantId,\n                    onToggleDoneId}) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n            {...itemProps }\n            onDeleted={() => onDeletedId(id)}\n            onToggleImportant={() => onToggleImportantId(id)}\n            onToggleDone={() => onToggleDoneId(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React, {Component} from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        { name: 'all', label: 'All'},\n        { name: 'active', label: 'Active'},\n        { name: 'done', label: 'Done'},\n    ];\n\n    render() {\n\n        const { filter, onFilterChange } = this.props;\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n\n            return (\n                <button type=\"button\"\n                        className={`btn ${clazz}`}\n                        key={name}\n                        onClick={()=> onFilterChange(name)}>\n                    {label}\n                </button>\n            )\n        });\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    };\n};\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n      label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={this.onLabelChange}\r\n                placeholder=\"What needs to be done\"\r\n                value={this.state.label}/>\r\n\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from \"../item-add-form\";\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        term: '',\n        filter: 'all' //active, all, done\n    };\n\n    createTodoItem(label) {\n        return {\n                label,\n                important: false,\n                done: false,\n                id: this.maxId++\n        };\n    };\n\n    deleteItem = (id) => {\n        this.setState(({ todoData })=> {\n            const idx = todoData.findIndex((el) => el.id === id);\n\n            const newArray = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n\n            return {\n                todoData: newArray\n            };\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text)\n\n        this.setState(({ todoData }) => {\n            const newArr = [\n                ...todoData,\n                newItem\n            ];\n\n            return {\n                todoData: newArr\n            };\n        });\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {...oldItem, [propName]: !oldItem[propName] };\n\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    };\n\n    onToggleDone = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            };\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            }\n        });\n    };\n\n    onSearchChange = (term) => {\n        this.setState({ term });\n    };\n\n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    };\n\n    search(items, term) {\n        if(term.length === 0) {\n            return items;\n        }\n\n        return items.filter((item) => {\n          return item.label\n              .toLowerCase()\n              .indexOf(term.toLowerCase()) > -1;\n        });\n    };\n\n    filterItems(items, filter) {\n        switch(filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n               return items;\n        };\n    };\n\n    render() {\n        const { todoData, term, filter } = this.state;\n\n        const visibleItems =this.filterItems(\n            this.search(todoData, term), filter);\n\n        const doneCount = todoData\n            .filter((el) => el.done).length;\n\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChangeTerm={this.onSearchChange}/>\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilterChange={this.onFilterChange}/>\n                </div>\n\n                <TodoList\n                    todos={visibleItems}\n                    onDeletedId={this.deleteItem}\n                    onToggleImportantId={this.onToggleImportant}\n                    onToggleDoneId={this.onToggleDone}\n                />\n\n                <ItemAddForm onItemAdded={ this.addItem }/>\n            </div>\n        );\n    };\n};\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}